name: dockercompose16927571343777778428
services:
  api:
    build:
      context: D:\MyScheduler
      dockerfile: Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: Server=sqlserver;Database=Scheduler_db;User Id=myUser;Password=mustafa@1031998;TrustServerCertificate=True;
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
  palm:
    build:
      context: D:\MyScheduler
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Palm
    container_name: Palm
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    labels:
      com.microsoft.visual-studio.project-name: Palm
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/Palm.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\ascom\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ascom\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ascom\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ascom\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ascom\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    command:
      - /bin/bash
      - -c
      - " /opt/mssql/bin/sqlservr &  sleep 20 && /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q \"\n  CREATE DATABASE Scheduler_db;\n  CREATE LOGIN myUser WITH PASSWORD = 'mustafa@1031998', CHECK_POLICY = OFF;\n  USE Scheduler_db;\n  CREATE USER myUser FOR LOGIN myUser;\n  ALTER ROLE db_owner ADD MEMBER myUser;\" \n&& tail -f /dev/null"
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Your_password123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlvolume
        target: /var/opt/mssql
        volume: {}
networks:
  backend:
    name: dockercompose16927571343777778428_backend
  default:
    name: dockercompose16927571343777778428_default
volumes:
  sqlvolume:
    name: dockercompose16927571343777778428_sqlvolume